// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`merge test should cancel valueInCols if custom rows is not empty by get safety data config 1`] = `
Object {
  "data": Array [],
  "fields": Object {
    "columns": Array [],
    "rows": Array [
      Object {
        "field": "1",
        "title": "test",
      },
    ],
    "valueInCols": false,
    "values": Array [
      "1",
    ],
  },
  "filterParams": Array [],
  "meta": Array [],
  "sortParams": Array [],
}
`;

exports[`merge test should cancel valueInCols if value is empty by get safety data config 1`] = `
Object {
  "data": Array [],
  "fields": Object {
    "columns": Array [],
    "rows": Array [],
    "valueInCols": false,
    "values": Array [],
  },
  "filterParams": Array [],
  "meta": Array [],
  "sortParams": Array [],
}
`;

exports[`merge test should get custom options 1`] = `
Object {
  "autoAdjustBoundary": "body",
  "enable": false,
  "operation": Object {
    "hiddenColumns": false,
    "menu": Object {
      "items": Array [
        Object {
          "key": "custom",
          "label": "custom",
        },
      ],
    },
    "sort": false,
  },
}
`;

exports[`merge test should get safety data config 1`] = `
Object {
  "data": Array [],
  "fields": Object {
    "columns": Array [],
    "rows": Array [],
    "valueInCols": false,
    "values": Array [],
  },
  "filterParams": Array [],
  "meta": Array [],
  "sortParams": Array [],
}
`;

exports[`merge test should get safety options 1`] = `
Object {
  "conditions": Object {},
  "cornerExtraFieldText": "",
  "cornerText": "",
  "customSVGIcons": Array [],
  "debug": false,
  "device": "pc",
  "frozen": Object {
    "colCount": 0,
    "rowCount": 0,
    "rowHeader": true,
    "trailingColCount": 0,
    "trailingRowCount": 0,
  },
  "hd": true,
  "headerActionIcons": Array [],
  "height": 480,
  "hierarchyType": "grid",
  "interaction": Object {
    "autoResetSheetStyle": true,
    "brushSelection": Object {
      "colCell": true,
      "dataCell": true,
      "rowCell": true,
    },
    "copy": Object {
      "enable": true,
      "withFormat": true,
      "withHeader": false,
    },
    "eventListenerOptions": false,
    "hiddenColumnFields": Array [],
    "hoverFocus": Object {
      "duration": 800,
    },
    "hoverHighlight": true,
    "linkFields": Array [],
    "multiSelection": true,
    "overscrollBehavior": "auto",
    "rangeSelection": true,
    "resize": Object {
      "colCellHorizontal": true,
      "colCellVertical": true,
      "colResizeType": "current",
      "cornerCellHorizontal": true,
      "minCellHeight": 20,
      "minCellWidth": 40,
      "rowCellVertical": true,
      "rowResizeType": "current",
    },
    "scrollSpeedRatio": Object {
      "horizontal": 1,
      "vertical": 1,
    },
    "scrollbarPosition": "content",
    "selectedCellHighlight": false,
    "selectedCellsSpotlight": false,
  },
  "placeholder": Object {
    "cell": "-",
    "empty": Object {
      "icon": "Empty",
    },
  },
  "seriesNumber": Object {
    "enable": false,
  },
  "showDefaultHeaderActionIcon": false,
  "style": Object {
    "colCell": Object {
      "height": 30,
      "maxLines": 1,
      "textOverflow": "ellipsis",
      "wordWrap": true,
    },
    "cornerCell": Object {
      "maxLines": 1,
      "textOverflow": "ellipsis",
      "wordWrap": true,
    },
    "dataCell": Object {
      "height": 30,
      "maxLines": 1,
      "textOverflow": "ellipsis",
      "width": 96,
      "wordWrap": true,
    },
    "layoutWidthType": "adaptive",
    "rowCell": Object {
      "maxLines": 1,
      "showTreeLeafNodeAlignDot": false,
      "textOverflow": "ellipsis",
      "wordWrap": true,
    },
    "seriesNumberCell": Object {
      "maxLines": 1,
      "textOverflow": "ellipsis",
      "wordWrap": true,
    },
  },
  "tooltip": Object {
    "autoAdjustBoundary": "body",
    "enable": false,
    "operation": Object {
      "hiddenColumns": false,
      "menu": Object {
        "items": Array [],
      },
      "sort": false,
    },
  },
  "totals": Object {},
  "width": 600,
}
`;

exports[`merge test should merge old dataCfg 1`] = `
Object {
  "data": Array [
    Object {
      "value": 1,
    },
    Object {
      "value": 2,
    },
  ],
  "fields": Object {
    "columns": Array [],
    "rows": Array [],
    "valueInCols": false,
    "values": Array [],
  },
  "filterParams": Array [],
  "meta": Array [],
  "sortParams": Array [],
}
`;

exports[`merge test should not setup correctly compact layout width type style 1`] = `
Object {
  "colCell": Object {
    "height": 30,
    "maxLines": 1,
    "textOverflow": "ellipsis",
    "wordWrap": true,
  },
  "cornerCell": Object {
    "maxLines": 1,
    "textOverflow": "ellipsis",
    "wordWrap": true,
  },
  "dataCell": Object {
    "height": 30,
    "maxLines": 1,
    "textOverflow": "ellipsis",
    "width": 96,
    "wordWrap": true,
  },
  "layoutWidthType": "compact",
  "rowCell": Object {
    "maxLines": 1,
    "showTreeLeafNodeAlignDot": false,
    "textOverflow": "ellipsis",
    "wordWrap": true,
  },
  "seriesNumberCell": Object {
    "maxLines": 1,
    "textOverflow": "ellipsis",
    "wordWrap": true,
  },
}
`;

exports[`merge test should unique dataConfig fields 1`] = `
Object {
  "data": Array [],
  "fields": Object {
    "columns": Array [
      "type",
    ],
    "rows": Array [
      "province",
      "city",
    ],
    "valueInCols": false,
    "values": Array [
      "count",
      "cost",
    ],
  },
  "filterParams": Array [],
  "meta": Array [],
  "sortParams": Array [],
}
`;
