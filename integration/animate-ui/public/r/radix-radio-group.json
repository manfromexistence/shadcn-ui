{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "radix-radio-group",
  "type": "registry:ui",
  "title": "Radio Group",
  "description": "Radio Group component",
  "dependencies": [
    "motion",
    "lucide-react",
    "@radix-ui/react-radio-group"
  ],
  "files": [
    {
      "path": "registry/radix/radix-radio-group/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport * as RadioGroupPrimitive from '@radix-ui/react-radio-group';\nimport { Circle } from 'lucide-react';\nimport {\n  AnimatePresence,\n  motion,\n  type HTMLMotionProps,\n  type Transition,\n} from 'motion/react';\n\nimport { cn } from '@/lib/utils';\n\ntype RadioGroupProps = React.ComponentPropsWithoutRef<\n  typeof RadioGroupPrimitive.Root\n> & {\n  transition?: Transition;\n};\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  RadioGroupProps\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      ref={ref}\n      className={cn('grid gap-2.5', className)}\n      {...props}\n    />\n  );\n});\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName;\n\ntype RadioGroupIndicatorProps = React.ComponentPropsWithoutRef<\n  typeof RadioGroupPrimitive.Indicator\n> & {\n  transition: Transition;\n};\n\nconst RadioGroupIndicator = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Indicator>,\n  RadioGroupIndicatorProps\n>(({ className, transition, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Indicator\n      ref={ref}\n      className={cn('flex items-center justify-center', className)}\n      {...props}\n    >\n      <AnimatePresence>\n        <motion.div\n          key=\"radio-indicator\"\n          initial={{ opacity: 0, scale: 0 }}\n          animate={{ opacity: 1, scale: 1 }}\n          exit={{ opacity: 0, scale: 0 }}\n          transition={transition}\n        >\n          <Circle className=\"size-3 fill-current text-current\" />\n        </motion.div>\n      </AnimatePresence>\n    </RadioGroupPrimitive.Indicator>\n  );\n});\nRadioGroupIndicator.displayName = RadioGroupPrimitive.Indicator.displayName;\n\ntype RadioGroupItemProps = React.ComponentPropsWithoutRef<\n  typeof RadioGroupPrimitive.Item\n> &\n  HTMLMotionProps<'button'> & {\n    transition?: Transition;\n  };\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  RadioGroupItemProps\n>(\n  (\n    {\n      className,\n      transition = { type: 'spring', stiffness: 200, damping: 16 },\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <RadioGroupPrimitive.Item ref={ref} asChild {...props}>\n        <motion.button\n          className={cn(\n            'aspect-square size-5 rounded-full flex items-center justify-center border border-input text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n            className,\n          )}\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          {...props}\n        >\n          <RadioGroupIndicator transition={transition} />\n        </motion.button>\n      </RadioGroupPrimitive.Item>\n    );\n  },\n);\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName;\n\nexport {\n  RadioGroup,\n  RadioGroupItem,\n  type RadioGroupProps,\n  type RadioGroupItemProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/radix-radio-group.tsx"
    }
  ]
}